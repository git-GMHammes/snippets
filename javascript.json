{
  // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "react-cdn-Modelo": {
    "prefix": "react-cdn-Modelo",
    "body": [
      "",
    ],
    "description": "react-cdn-Modelo"
  },
  "react--full-Modelo": {
    "prefix": "react--full-Modelo",
    "body": [
      "",
      "const AppComponent = () => {",
      "    return (",
      "        <div className=\"container mt-4\">",
      "            <h1>Habilidade.Com</h1>",
      "            <p>Sistemas Inteligentes.</p>",
      "        </div>",
      "    );",
      "};",
      "",
      "export default AppComponent;",
      "",
    ],
    "description": "react--full-Modelo"
  },
  "react-cdn-AppJson": {
    "prefix": "react-cdn-AppJson",
    "body": [
      "",
      "<AppJson",
      "    parametros={parametros}",
      "    dbResponse={formData}",
      "/>",
      "",
    ],
    "description": "react-cdn-AppJson"
  },
  "react-cdn-AppMessage": {
    "prefix": "react-cdn-AppMessage",
    "body": [
      "",
      "<div>",
      "    <AppMessageCard",
      "        parametros={message}",
      "        modalId={`modal_${token_csrf}`}",
      "    />",
      "</div>",
      "",
    ],
    "description": "react-cdn-AppMessage"
  },
  "react-cdn-form-submitAllForms": {
    "prefix": "react-cdn-form-submitAllForms",
    "body": [
      "",
      "<form className=\"was-validated\" onSubmit={(e)=> {",
      "    e.preventDefault();",
      "    submitAllForms(`filtro-${${1:origemForm}}`);",
      "    }}>",
      "",
      "</form>",
      "",
    ],
    "description": "react-cdn-form-submitAllForms"
  },
  "react-cdn-AppSelectMultipleCtr": {
    "prefix": "react-cdn-AppSelectMultipleCtr",
    "body": [
      "",
      "<AppSelectMultipleCtr",
      "    parametros={parametros}",
      "    formData={formData}",
      "    setFormData={setFormData}",
      "    fieldAttributes={{",
      "    attributeOrigemForm: `${${1:origemForm}}`,",
      "        label: 'AppSelectMultipleCtr',",
      "        name: 'AppSelectMultipleCtr',",
      "        errorMessage: '', // Mensagem de Erro personalizada",
      "        attributeFieldKey: ['id', 'key'], // Chave do campo",
      "        attributeFieldName: ['bank_column_api', 'value'], // Nome do campo",
      "        attributeRequired: true,",
      "        attributeDisabled: false,",
      "        objetoArrayKey: [",
      "            { key: '1', value: 'Opção 1' },",
      "            { key: '2', value: 'Opção 2' },",
      "            { key: '3', value: 'Opção 3' },",
      "            { key: '4', value: 'Opção 4' }",
      "        ],",
      "        api_get: `api/get`,",
      "        api_post: `api/post`,",
      "        api_filter: `api/filter`,",
      "    }}",
      "/>",
      "",
    ],
    "description": "react-cdn-AppSelectMultipleCtr"
  },
  "react-cdn-AppSelect": {
    "prefix": "react-cdn-AppSelect",
    "body": [
      "",
      "<AppSelect",
      "    parametros={parametros}",
      "    formData={formData}",
      "    setFormData={setFormData}",
      "    fieldAttributes={{",
      "    attributeOrigemForm: `${${1:origemForm}}`,",
      "        labelField: 'AppSelect',",
      "        nameField: 'AppSelect',",
      "        errorMessage: '', // Mensagem de Erro personalizada",
      "        attributeFieldKey: ['id', 'key'], // Chave do campo",
      "        attributeFieldName: ['bank_column_api', 'value'], // Nome do campo",
      "        attributeRequired: true,",
      "        attributeDisabled: false,",
      "        objetoArrayKey: [",
      "            { key: '1', value: 'Opção 1' },",
      "            { key: '2', value: 'Opção 2' },",
      "            { key: '3', value: 'Opção 3' },",
      "            { key: '4', value: 'Opção 4' }",
      "        ],",
      "        api_get: `api/get`,",
      "        api_post: `api/post`,",
      "        api_filter: `api/filter`,",
      "    }}",
      " />",
      "",
    ],
    "description": "react-cdn-AppSelect"
  },
  "react-cdn-AppSelectBtnCheck": {
    "prefix": "react-cdn-AppSelectBtnCheck",
    "body": [
      "",
      "<AppSelectBtnCheck",
      "    parametros={parametros}",
      "    formData={formData}",
      "    setFormData={setFormData}",
      "    fieldAttributes={{",
      "        attributeOrigemForm: `${${1:origemForm}}`,",
      "        label: 'AppSelectBtnCheck',",
      "        name: 'nameField',",
      "        errorMessage: '', // Mensagem de Erro personalizada",
      "        attributeFieldKey: ['id', 'key'], // Chave do campo",
      "        attributeFieldName: ['bank_column_api', 'value'], // Nome do campo",
      "        attributeRequired: true,",
      "        attributeDisabled: false,",
      "        objetoArrayKey: [",
      "            { key: '1', value: 'Opção 1' },",
      "            { key: '2', value: 'Opção 2' },",
      "            { key: '3', value: 'Opção 3' },",
      "            { key: '4', value: 'Opção 4' }",
      "        ],",
      "        api_get: `api/get`,",
      "        api_post: `api/post`,",
      "        api_filter: `api/filter`,",
      "    }}",
      "/>",
      "",
    ],
    "description": "react-cdn-AppSelectBtnCheck"
  },
  "react-cdn-AppSelectBtnRadio": {
    "prefix": "react-cdn-AppSelectBtnRadio",
    "body": [
      "",
      "<AppSelectBtnRadio",
      "    parametros={parametros}",
      "    formData={formData}",
      "    setFormData={setFormData}",
      "    fieldAttributes={{",
      "        attributeOrigemForm: `${${1:origemForm}}`,",
      "        label: 'AppSelectBtnRadio',",
      "        name: 'nameField',",
      "        errorMessage: '', // Mensagem de Erro personalizada",
      "        attributeFieldKey: ['id', 'key'], // Chave do campo",
      "        attributeFieldName: ['bank_column_api', 'value'], // Nome do campo",
      "        attributeRequired: true,",
      "        attributeDisabled: false,",
      "        objetoArrayKey: [",
      "            { key: '1', value: 'Opção 1' },",
      "            { key: '2', value: 'Opção 2' },",
      "            { key: '3', value: 'Opção 3' },",
      "            { key: '4', value: 'Opção 4' }",
      "        ],",
      "        api_get: `api/get`,",
      "        api_post: `api/post`,",
      "        api_filter: `api/filter`,",
      "    }}",
      "/>",
      "",
    ],
    "description": "react-cdn-AppSelectBtnRadio"
  },
  "react-cdn-AppText": {
    "prefix": "react-cdn-AppText",
    "body": [
      "",
      "<AppText parametros={parametros} formData={formData} setFormData={setFormData}",
      "    fieldAttributes={{",
      "        attributeOrigemForm: `${${1:origemForm}}`,",
      "        labelField: 'Rótulo',",
      "        labelColor: 'gray', // gray, red, black,",
      "        nameField: 'nameField', ",
      "        errorMessage: '', // Mensagem de Erro personalizada",
      "        attributePlaceholder: '', // placeholder ",
      "        attributeMinlength: 4, // minlength ",
      "        attributeMaxlength: 22, // maxlength - Telefone: 14, CPF: 14, CEP: 9, Processo Judicial: 20, Processo SEI: 22",
      "        attributePattern: 'Caracter', // Inteiro, Caracter, Senha",
      "        attributeAutocomplete: 'on', // on, off ]",
      "        attributeRequired: true,",
      "        attributeReadOnly: false,",
      "        attributeDisabled: false,",
      "        attributeMask: '', // CPF, Telefone, CEP, , SEI, Processo.",
      "    }}",
      "/>",
      "",
    ],
    "description": "react-cdn-AppText"
  },
  "react-cdn-typeof": {
    "prefix": "react-cdn-typeof",
    "body": [
      "",
      "{typeof ScriptDesejado !== \"undefined\" ? (",
      "    <div>",
      "        <ScriptDesejado />",
      "    </div>",
      ") : (",
      "  <div>",
      "    <p className=\"text-danger\">ScriptDesejado não lacançado.</p>",
      "</div>",
      ")}",
      "",
    ],
    "description": "react-cdn-typeof"
  },
  "react-cdn-is-loading": {
    "prefix": "react-cdn-is-loading",
    "body": [
      "",
      "    {(isLoading) ? (",
      "        <div>",
      "            <div>&nbsp;</div>",
      "            <AppLoading parametros={{ tipoLoading: 'progress', carregando: true }} />",
      "        </div>",
      "    ) : (",
      "        <div>",
      "            ",
      "        </div>",
      "    )}",
      "",
    ],
    "description": "react-cdn-is-loading"
  },
  "react-cdn-handleFocus": {
    "prefix": "react-cdn-handleFocus",
    "body": [
      "",
      "// Função handleFocus para receber foco",
      "const handleFocus = (event) => {",
      "    const { name, value } = event.target;",
      "",
      "    console.log('handleFocus: ', name);",
      "    console.log('handleFocus: ', value);",
      "",
      "    setMessage({ show: false, type: null, message: null });",
      "",
      "    setFormData((prev) => ({",
      "        ...prev,",
      "        [name]: value",
      "    }));",
      "",
      "    // Verifica se a mudança de campo",
      "    if (name === 'variavel_001') {",
      "        console.log('variavel_001');",
      "        // submitAllForms('filtro-api');",
      "    }",
      "};",
      ""
    ],
    "description": "react-cdn-handleFocus"
  },
  "react-cdn-handleChange": {
    "prefix": "react-cdn-handleChange",
    "body": [
      "",
      "// Função handleChange simplificada",
      "const handleChange = (event) => {",
      "    const { name, value } = event.target;",
      "",
      "    console.log('handleChange: ', name);",
      "    console.log('handleChange: ', value);",
      "",
      "    setFormData((prev) => ({",
      "        ...prev,",
      "        [name]: value",
      "    }));",
      "",
      "    // Verifica se a mudança é no campo 'variavel_001'",
      "    if (name === 'variavel_001') {",
      "        console.log('variavel_001');",
      "        // submitAllForms('filtro-api');",
      "    }",
      "    setMessage({ show: false, type: null, message: null });",
      "};",
      ""
    ],
    "description": "react-cdn-handleChange"
  },
  "react-cdn-handleBlur": {
    "prefix": "react-cdn-handleBlur",
    "body": [
      "",
      "// Função que executa após a retirada do foco",
      "const handleBlur = (event) => {",
      "    const { name, value } = event.target;",
      "",
      "    console.log('name handleBlur: ', name);",
      "    console.log('value handleBlur: ', value);",
      "",
      "    setFormData((prev) => ({",
      "        ...prev,",
      "        [name]: value",
      "    }));",
      "",
      "    // Verifica se a mudança é no campo 'variavel_001'",
      "    if (name === 'variavel_001') {",
      "        console.log('variavel_001');",
      "        // submitAllForms('filtro-api');",
      "    }",
      "    setMessage({ show: false, type: null, message: null });",
      "}",
      ""
    ],
    "description": "react-cdn-handleBlur"
  },
  "react-cdn-post": {
    "prefix": "react-cdn-post",
    "body": [
      " ",
      "// POST Padrão ",
      "const fetchPost = async (custonBaseURL = base_url, custonApiPostObjeto = api_get_objeto, customPage = getVar_page) => {",
      "    const url = custonBaseURL + custonApiPostObjeto + customPage;",
      "    const SetData = formData;",
      "    try {",
      "        const response = await fetch(url, {",
      "            method: 'POST',",
      "            headers: {",
      "                'Content-Type': 'application/json',",
      "            },",
      "            body: JSON.stringify(setData),",
      "        });",
      "        const data = await response.json();",
      "        if (data.result && Array.isArray(data.result.dbResponse) && data.result.dbResponse.length > 0) {",
      "            const dbResponse = data.result.dbResponse;",
      "            // ",
      "            setApiUrlList(dbResponse);",
      "            setPagination('list');",
      "            //",
      "            setFormData((prev) => ({",
      "                ...prev,",
      "                ...dbResponse",
      "            }));",
      "        } else {",
      "            setMessage({",
      "                show: true,",
      "                type: 'light',",
      "                message: 'Não foram encontradas objeto cadastradas'",
      "            });",
      "            setIsLoading(false);",
      "        }",
      "    } catch (error) {",
      "        console.error('Erro ao enviar dados:', error);",
      "        // Aqui você pode adicionar lógica adicional para exibir o erro para o usuário",
      "        return null;",
      "    }",
      "};",
      " "
    ],
    "description": "react-cdn-post"
  },
  "react-cdn-get": {
    "prefix": "react-cdn-get",
    "body": [
      "",
      "// Fetch para GET",
      "const fetchGet = async (custonBaseURL = base_url, custonApiGetObjeto = api_get_objeto, customPage = getVar_page) => {",
      "    const url = custonBaseURL + custonApiGetObjeto + customPage;",
      "    try {",
      "    const response = await fetch(url);",
      "    const data = await response.json();",
      "        if (data.result && Array.isArray(data.result.dbResponse) && data.result.dbResponse.length > 0) {",
      "            const dbResponse = data.result.dbResponse;",
      "            // ",
      "            setApiUrlList(dbResponse);",
      "            setPagination('list');",
      "            //",
      "            setFormData((prev) => ({",
      "                ...prev,",
      "                ...dbResponse",
      "            }));",
      "        } else {",
      "            setMessage({",
      "                show: true,",
      "                type: 'light',",
      "                message: 'Não foram encontradas objeto cadastradas'",
      "            });",
      "            setIsLoading(false);",
      "        }",
      "",
      "        if (data.result && Array.isArray(data.result.dbResponse) && data.result.linksArray.length > 0) {",
      "            setPaginacaoLista(data.result.linksArray);",
      "            setIsLoading(false);",
      "        }",
      "    } catch (error) {",
      "        console.error('Erro ao enviar dados:', error);",
      "        setMessage({",
      "            show: true,",
      "            type: 'light',",
      "            message: 'Erro ao carregar Unidades: ' + error.message",
      "        });",
      "    }",
      "};",
      "",
    ],
    "description": "react-cdn-get"
  },
  "react-cdn-AppForm": {
    "prefix": "react-cdn-AppForm",
    "body": [
      "",
      "    const AppForm = ({ setParametros = {} }) => {",
      "",
      "        const parametros = setParametros;",
      "",
      "        // Base API/POST",
      "        const api_post = parametros.api_post || '';",
      "        const api_get = parametros.api_get || '';",
      "",
      "        // Variáveis para APIs Select",
      "        const [lista, setLista] = React.useState([",
      "            { id: 1, nome: \"Nome Um\" },",
      "            { id: 2, nome: \"Nome Dois\" },",
      "            { id: 3, nome: \"Nome Três\" }",
      "        ]);",
      "",
      "        // Declare Todos os Campos do Formulário Aqui",
      "        const [formData, setFormData] = React.useState({",
      "            //",
      "            token_csrf: '123',",
      "            json: '1',",
      "            //d",
      "            campo1: null,",
      "            campo2: null,",
      "            campo3: null",
      "        });",
      "",
      "        // Função handleChange simplificada",
      "        const handleChange = (event) => {",
      "            const { name, value } = event.target;",
      "            console.log('name handleChange: ', name);",
      "            console.log('value handleChange: ', value);",
      "",
      "            setFormData((prev) => ({",
      "                ...prev,",
      "                [name]: value",
      "            }));",
      "",
      "            // Se o campo for o campo1, faz a validação",
      "            if (name === 'campo1') {",
      "                console.log('Informar o que é para fazer.');",
      "            }",
      "        };",
      "",
      "        // Função handleBlur simplificada",
      "        const handleBlur = (event) => {",
      "            const { name, value } = event.target;",
      "",
      "            // Se o campo for o campo1, faz a validação",
      "            if (name === 'campo1') {",
      "                console.log('Informar o que é para fazer.');",
      "            }",
      "",
      "            setFormData((prev) => ({",
      "                ...prev,",
      "                [name]: ''",
      "            }));",
      "",
      "        };",
      "",
      "        // Fetch para GET",
      "        const fetchGet = async (custonBaseURL = base_url, custonApiGetObjeto = api_get_objeto, customPage = getVar_page) => {",
      "            const url = custonBaseURL + custonApiGetObjeto + customPage;",
      "            try {",
      "            const response = await fetch(url);",
      "            const data = await response.json();",
      "                if (data.result && Array.isArray(data.result.dbResponse) && data.result.dbResponse.length > 0) {",
      "                    const dbResponse = data.result.dbResponse;",
      "                    // ",
      "                    setApiUrlList(dbResponse);",
      "                    setPagination('list');",
      "                    //",
      "                    setFormData((prev) => ({",
      "                        ...prev,",
      "                        ...dbResponse",
      "                    }));",
      "                } else {",
      "                    setMessage({",
      "                        show: true,",
      "                        type: 'light',",
      "                        message: 'Não foram encontradas objeto cadastradas'",
      "                    });",
      "                    setIsLoading(false);",
      "                }",
      "",
      "                if (data.result && data.result.linksArray && data.result.linksArray.length > 0) {",
      "                    setPaginacaoLista(data.result.linksArray);",
      "                    setIsLoading(false);",
      "                }",
      "            } catch (error) {",
      "                setMessage({",
      "                    show: true,",
      "                    type: 'light',",
      "                    message: 'Erro ao carregar Unidades: ' + error.message",
      "                });",
      "            }",
      "        };",
      "",
      "        // POST Padrão ",
      "        const fetchPost = async (custonBaseURL = base_url, custonApiPostObjeto = api_get_objeto, customPage = getVar_page) => {",
      "            const url = custonBaseURL + custonApiPostObjeto + customPage;",
      "            // Adiciona os valores dos inputs ao formData",
      "            setDataFields((prevDataFields) => ({",
      "                ...formData,",
      "                ...prevDataFields",
      "            }));",
      "            try {",
      "                const response = await fetch(url, {",
      "                    method: 'POST',",
      "                    headers: {",
      "                        'Content-Type': 'application/json',",
      "                    },",
      "                    body: JSON.stringify(data),",
      "                });",
      "                const data = await response.json();",
      "                if (data.result && Array.isArray(data.result.dbResponse) && data.result.dbResponse.length > 0) {",
      "                    const dbResponse = data.result.dbResponse;",
      "                    // ",
      "                    setApiUrlList(dbResponse);",
      "                    setPagination('list');",
      "                    //",
      "                    setFormData((prev) => ({",
      "                        ...prev,",
      "                        ...dbResponse",
      "                    }));",
      "                } else {",
      "                    setMessage({",
      "                        show: true,",
      "                        type: 'light',",
      "                        message: 'Não foram encontradas objeto cadastradas'",
      "                    });",
      "                    setIsLoading(false);",
      "                }",
      "                if (data.result && data.result.linksArray && data.result.linksArray.length > 0) {",
      "                    setPaginacaoLista(data.result.linksArray);",
      "                    setIsLoading(false);",
      "                }",
      "            } catch (error) {",
      "                console.error('Erro ao enviar dados:', error);",
      "                // Aqui você pode adicionar lógica adicional para exibir o erro para o usuário",
      "                return null;",
      "            }",
      "        };",
      "",
      "            } catch (error) {",
      "                console.error('Erro ao carregar Profissões: ' + error.message);",
      "                return [];",
      "            }",
      "        };",
      "",
      "        const submitAllForms = async (apiIdentifier) => {",
      "            // ",
      "            console.log('submitAllForms...');",
      "            // Cria um objeto para armazenar os dados dos inputs",
      "            const inputs = document.querySelectorAll(`[data-api=\"${apiIdentifier}\"]`);",
      "            const inputValues = {};",
      "            inputs.forEach(input => {",
      "                if (input.type === 'checkbox') {",
      "                    // Para checkbox, considera o estado \"checked\"",
      "                    inputValues[input.name] = input.checked;",
      "                } else if (input.type === 'radio') {",
      "                    // Para radio, seleciona o que está marcado",
      "                    if (input.checked) {",
      "                        inputValues[input.name] = input.value;",
      "                    }",
      "                } else if (input.tagName === 'SELECT') {",
      "                    // Para select, pega o valor selecionado",
      "                    inputValues[input.name] = input.value;",
      "                } else {",
      "                    // Para outros tipos de input (text, number, etc.)",
      "                    inputValues[input.name] = input.value;",
      "                }",
      "            });",
      " ",
      "            // Adiciona os valores dos inputs ao formData",
      "            setDataFields((prevDataFields) => ({",
      "                ...formData,",
      "                ...inputValues,",
      "                ...prevDataFields,",
      "            }));",
      " ",
      "            // ",
      "            const setData = formData;",
      "            let data = '';",
      "            let dbResponse = [];",
      "",
      "            if (apiIdentifier === `filtro-origemForm`) {",
      "",
      "                data = fetchPOST(setData, api_post);",
      "",
      "                if (",
      "                    data.status &&",
      "                    data.status === 'success' &&",
      "                    data.result &&",
      "                    data.result.affectedRows &&",
      "                    data.result.affectedRows > 0",
      "                ) {",
      "                    dbResponse = data.result.dbResponse;",
      "                    console.log('Sucesso: ', dbResponse);",
      "                } else {",
      "                    console.error('Error: ', dbResponse);",
      "                }",
      "            }",
      "        };",
      "",
      "        // React.useEffect",
      "        React.useEffect(() => {",
      "            console.log('React.useEffect - Carregar Dados Iniciais');",
      "",
      "            // Função para carregar todos os dados necessários",
      "            const loadData = async () => {",
      "                console.log('loadData iniciando...');",
      "",
      "                try {",
      "                    await fetchGET();",
      "",
      "                } catch (error) {",
      "                    console.error('Erro ao carregar dados:', error);",
      "",
      "                } finally {",
      "                    setIsLoading(false);",
      "",
      "                }",
      "            };",
      "",
      "            loadData();",
      "",
      "        }, []);",
      "        ",
      "        return <div>Formulário será exibido aqui</div>;",
      "    };",
      "",
      "    // const rootElement = document.querySelector('.app_form');",
      "    // const root = ReactDOM.createRoot(rootElement);",
      "    // root.render(<AppForm />);",
      "    ReactDOM.render(<AppForm />, document.querySelector('.app_form'));",
      "",
    ],
    "description": "react-cdn-AppForm"
  },
  "react-cdn-React.useEffect": {
    "prefix": "react-cdn-React.useEffect",
    "body": [
      "",
      "        // React.useEffect",
      "        React.useEffect(() => {",
      "            console.log('React.useEffect - Carregar Dados Iniciais');",
      "",
      "            // Função para carregar todos os dados necessários",
      "            const loadData = async () => {",
      "                console.log('loadData iniciando...');",
      "",
      "                try {",
      "                    await fetchRequisicao001();",
      "                    await fetchRequisicao002();",
      "                    await fetchRequisicao003();",
      "",
      "                } catch (error) {",
      "                    console.error('Erro ao carregar dados:', error);",
      "                } finally {",
      "                    setIsLoading(false);",
      "                }",
      "            };",
      "",
      "            loadData();",
      "        }, []);",
      ""
    ],
    "description": "react-cdn-React.useEffect"
  },
  "react-cdn-html-funcao-submit": {
    "prefix": "react-cdn-html-funcao-submit",
    "body": [
      " ",
      "const submitAllForms = async (apiIdentifier, data) => {",
      "    console.log('Dados a serem enviados:', data);",
      "",
      "    switch (apiIdentifier) {",
      "",
      "        case 'filtro-001':",
      "            console.log('filtro-001');",
      "            const updateData = captureFormData('filtro-001');",
      "            const response = await fetchData(`\\${base_url}/\\${api_url_001}`, updateData);",
      "            if (response && response.result && response.result.affectedRows > 0) {",
      "                console.log('insertID:', response.result.insertID);",
      "                setFormData(prev => ({",
      "                    ...prev,",
      "                    id: response.result.insertID",
      "                }));",
      "                const modal = new bootstrap.Modal(document.getElementById('MensagemSucessoSalvar'));",
      "                modal.show();",
      "            }",
      "            break;",
      "",
      "        case 'filtro-002':",
      "            console.log(apiIdentifier, '- OK');",
      "            const data = captureFormData('filtro-adolescente');",
      "            const responsavelData = await fetchData(`\\${base_url}/\\${api_url_002}`, data);",
      "            if (responsavelData && responsavelData.result && responsavelData.result.dbResponse && responsavelData.result.dbResponse.length > 0) {",
      "                console.log('form-responsavel:', responsavelData.result.dbResponse);",
      "                setResponsaveis(responsavelData.result.dbResponse);",
      "            }",
      "            break;",
      "",
      "        case 'filtro-003':",
      "            console.log(apiIdentifier, '- OK');",
      "            break;",
      "",
      "        default:",
      "            console.log('Identificador de API desconhecido:', apiIdentifier);",
      "            break;",
      "    }",
      "};",
      " "
    ],
    "description": "react-cdn-html-funcao-submit"
  },
  "react-cdn-html-atualiza-modal": {
    "prefix": "react-cdn-html-atualiza-modal",
    "body": [
      " ",
      "    const handleOpenModal = (parameter) => {",
      "        console.log(\"handleOpenModal:\", parameter);",
      "        setFormData(parameter);",
      "        // Exemplo",
      "        // {apiUrlList.map((select_value, index) => (...",
      "        // <button type=\"button\" className=\"btn btn-outline-primary\" data-bs-toggle=\"modal\" data-bs-target={`#staticBackdropProntuario$${index}`} onClick={() => handleOpenModal(select_value)}>",
      "        //      <i className=\"bi bi-pencil-square\" />",
      "        // </button>",
      "    };",
      " "
    ],
    "description": "react-cdn-html-atualiza-modal"
  },
  "react-cdn-html-fecharModal": {
    "prefix": "react-cdn-html-fecharModal",
    "body": [
      " ",
      " "
    ],
    "description": "react-cdn-html-fecharModal"
  },
  "fechar-modal-bootstrap-debug": {
    "prefix": "close-modal-debug",
    "body": [
      "const ${1:fecharModalComDebug} = () => {",
      "    // Log inicial com o ID do modal",
      "    console.log('Tentando fechar modal com ID:', ${2:idModal});",
      "",
      "    // Busca o elemento do modal no DOM",
      "    const modalElement = document.getElementById(`\\${${2:idModal}}`);",
      "    console.log('Elemento do modal:', modalElement);",
      "",
      "    // Obtém a instância do modal do Bootstrap",
      "    const modalInstance = bootstrap.Modal.getInstance(modalElement);",
      "    console.log('Instância do modal:', modalInstance);",
      "",
      "    if (modalInstance) {",
      "        try {",
      "            // Tenta fechar o modal",
      "            modalInstance.hide();",
      "            console.log('Modal fechado com sucesso');",
      "        } catch (${3:erro}) {",
      "            console.error('Erro ao fechar modal:', ${3:erro});",
      "        }",
      "    } else {",
      "        console.error('Não foi possível obter instância do modal');",
      "    }",
      "};"
    ],
    "description": "Cria uma função para fechar modal do Bootstrap com logs de debug detalhados"
  },
  "react-cdn-html-capturar-digita-form": {
    "prefix": "react-cdn-html-capturar-digita-form",
    "body": [
      " ",
      "const handleChange = (event) => {",
      "    const { name, value } = event.target;",
      "    setFormData((prev) => ({",
      "        ...prev,",
      "        [name]: value",
      "    }));",
      " ",
      "    // Verifica se a mudança é no campo 'variavel_001'",
      "    if (name === 'variavel_001') {",
      "        console.log('variavel_001');",
      "        // submitAllForms('filtro-api');",
      "    }",
      "};",
      " "
    ],
    "description": "react-cdn-html-capturar-digita-form"
  },
  "react-cdn-pre-cdn": {
    "prefix": "react-cdn-pre-cdn",
    "body": [
      " ",
      "<div>",
      "    {objeto.map((variavel_value, index) => (",
      "    <div key={index}>",
      "        <pre>{JSON.stringify(variavel_value, null, 2)}</pre>",
      "    </div>",
      "    ))}",
      "</div>",
      " "
    ],
    "description": "react-cdn-pre-cdn"
  },
  "script-js-XMLHttpRequest": {
    "prefix": "script-js-XMLHttpRequest",
    "body": [
      "var xmlHttp = new XMLHttpRequest()",
      "if (xmlHttp.readyState === 4 && xmlHttp.status === 200) {",
      "}"
    ],
    "description": "XMLHttpRequest()"
  },
  "script-js-open-GET-POST": {
    "prefix": "script-js-open-GET-POST",
    "body": [
      "var urlAddress = \"www/public/arquivo.php?var1=\" + varJS1 + \"&var2=\" + varJS2",
      "xmlHttp.open(\"GET-POST\", urlAddress, true)",
      "xmlHttp.send()"
    ],
    "description": "Modelo"
  },
  "script-refresh": {
    "prefix": "script-refresh",
    "body": [
      "onClick=\"window.location.reload()\""
    ],
    "description": "Modelo"
  },
  "script-cep-mask": {
    "prefix": "script-cep-mask",
    "body": [
      "$$(\"#cep\").focusout(function() {",
      "  var v_Cep = $$('#cep').val().replace('-', '').replace('.', '');",
      "  console.log(\"alguma coisa\");",
      "  $$.ajax({",
      "      url: 'https://viacep.com.br/ws/' + v_Cep + '/json/',",
      "      dataType: 'json',",
      "      success: function(resposta) {",
      "          $$(\"#logradouro\").val(resposta.logradouro);",
      "          $$(\"#complemento\").val(resposta.complemento);",
      "          $$(\"#bairro\").val(resposta.bairro);",
      "      }",
      "  });",
      "});"
    ],
    "description": "Modelo"
  },
  "script-ajax-table": {
    "prefix": "ajax-table",
    "body": [
      "    $.getJSON(\"https://api.ibge.com.br/municipios\", function(data) {",
      "",
      "        var tabela = $('<table>').addClass('table');",
      "        var cabecalho = $('<thead>').append(",
      "            $('<tr>').append(",
      "                $('<th>').text('UF'),",
      "                $('<th>').text('Código IBGE'),",
      "                $('<th>').text('Código MUNC IBGE'),",
      "                $('<th>').text('Município'),",
      "                $('<th>').text('População'), ",
      "                $('<th>').text('Teste')",
      "            )",
      "        );",
      "",
      "        var corpo = $('<tbody>');",
      "",
      "        data.result.forEach(function(item) {",
      "            var linha = $('<tr>').append(",
      "                $('<td>').text(item.str_uf),",
      "                $('<td>').text(item.str_cod_uf_ibge),",
      "                $('<td>').text(item.str_doc_munc_ibge),",
      "                $('<td>').text(item.str_municipio),",
      "                $('<td>').text(item.str_populacao),",
      "                $('<td>').text(\"Coloca Algo Aqui\")",
      "            );",
      "",
      "            corpo.append(linha);",
      "        });",
      "",
      "        tabela.append(cabecalho).append(corpo);",
      "",
      "        $('#tabela').append(tabela);",
      "    });",
      "<!-- <table id=\"tabela\"></table> -->"
    ],
    "description": "Exemplo de Ajax Recebendo API"
  },
  "react-cdn-alinhamento-vertical": {
    "prefix": "react-cdn-alinhamento-vertical",
    "body": [
      "",
      "<div className=\"d-flex justify-content-center align-items-center min-vh-100\">",
      "",
      "</div>",
      "",
    ],
    "description": "react-cdn-alinhamento-vertical"
  },
  "react-cdn-alinhamento-horizontal": {
    "prefix": "react-cdn-alinhamento-horizontal",
    "body": [
      "",
      "<div className=\"d-flex justify-content-between align-items-center bg-light m-0 p-0 border rounded\">",
      "    <div>Elemento 1</div>",
      "    <div>Elemento 2</div>",
      "    <div>Elemento 3</div>",
      "</div>",
      "",
      "<div className=\"container d-flex justify-content-center\">",
      "    <div>Elemento 1</div>",
      "    <div>Elemento 2</div>",
      "    <div>Elemento 3</div>",
      "</div>",
      "",
      "<div className=\"text-center p-0\">Texto centralizado</div>",
      "",
    ],
    "description": "react-cdn-alinhamento-horizontal"
  },
  "react-cdn-icon-seta-esquerda-direita": {
    "prefix": "react-cdn-icon-seta-esquerda-direita",
    "body": [
      "<i className=\"bi bi-caret-down\" />",
      "<i className=\"bi bi-caret-down-fill\" />",
      "<i className=\"bi bi-caret-left-fill\" />",
      "<i className=\"bi bi-caret-left-fill\" />",
      "<i className=\"bi bi-caret-right-fill\" />",
      "<i className=\"bi bi-caret-right-fill\" />",
      "<i className=\"bi bi-caret-up-fill\" />",
      "<i className=\"bi bi-caret-up-fill\" />",
      "<i className=\"bi bi-arrow-bar-left\"></i>",
      "<i className=\"bi bi-arrow-bar-right\"></i>",
      "<i className=\"bi bi-arrow-left\"></i>",
      "<i className=\"bi bi-arrow-right\"></i>",
      "<i className=\"bi bi-arrow-left-short\"></i>",
      "<i className=\"bi bi-arrow-right-short\"></i>",
      "<i className=\"bi bi-box-arrow-in-left\"></i>",
      "<i className=\"bi bi-box-arrow-in-right\"></i>",
      "<i className=\"bi bi-box-arrow-left\"></i>",
      "<i className=\"bi bi-box-arrow-right\"></i>",
      "<i className=\"bi bi-caret-left\"></i>",
      "<i className=\"bi bi-caret-right\"></i>",
      "<i className=\"bi bi-caret-left-square\"></i>",
      "<i className=\"bi bi-caret-right-square\"></i>",
      "<i className=\"bi bi-chevron-bar-left\"></i>",
      "<i className=\"bi bi-chevron-bar-right\"></i>",
      "<i className=\"bi bi-chevron-compact-left\"></i>",
      "<i className=\"bi bi-chevron-double-left\"></i>",
      "<i className=\"bi bi-chevron-double-right\"></i>",
      "<i className=\"bi bi-chevron-left\"></i>",
      "<i className=\"bi bi-chevron-right\"></i>",
      "<i className=\"bi bi-rewind\"></i>",
      "<i className=\"bi bi-fast-forward\"></i>",
      "<i className=\"bi bi-fast-forward-btn\"></i>",
      "<i className=\"bi bi-rewind-btn\"></i>",
      "<i className=\"bi bi-chevron-compact-down\"></i>",
      "<i className=\"bi bi-chevron-compact-up\"></i>",
      "<i className=\"bi bi-chevron-down\"></i>",
      "<i className=\"bi bi-chevron-up\"></i>",
      "",
    ],
    "description": "react-cdn-icon-seta-esquerda-direita"
  },
  "react-cdn-icon-lista-editar-excluir-buscar": {
    "prefix": "react-cdn-icon-lista-editar-excluir",
    "body": [
      "<i className=\"bi bi-file-earmark-spreadsheet\"></i>",
      "<i className=\"bi bi-file-earmark-ruled\"></i>",
      "<i className=\"bi bi-file-ruled\"></i>",
      "<i className=\"bi bi-grid-3x3\"></i>",
      "<i className=\"bi bi-pencil\"></i>",
      "<i className=\"bi bi-pencil-square\"></i>",
      "<i className=\"bi bi-trash3\"></i>",
      "<i className=\"bi bi-trash\"></i>",
      "<i className=\"bi bi-qr-code\"></i>",
      "<i className=\"bi bi-qr-code-scan\"></i>",
      "<i className=\"bi bi-search\"></i>",
      "",
    ],
    "description": "react-cdn-icon-lista-editar-excluir"
  },
  "react-cdn-icon-painel-engrenagem": {
    "prefix": "react-cdn-icon-painel-engrenagem",
    "body": [
      "<i className=\"bi bi-gear-wide-connected\"></i>",
      "<i className=\"bi bi-gear-wide\"></i>",
      "<i className=\"bi bi-gear-fill\"></i>",
      "<i className=\"bi bi-gear\"></i>",
      "",
    ],
    "description": "react-cdn-icon-painel-engrenagem"
  },
  "react-cdn-icon-Lixeira": {
    "prefix": "react-cdn-icon-Lixeira",
    "body": [
      "<i className=\"bi bi-trash3-fill\"></i>",
      "<i className=\"bi bi-trash3\"></i>",
      "<i className=\"bi bi-trash-fill\"></i>",
      "<i className=\"bi bi-trash\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Lixeira"
  },
  "react-cdn-icon-Rede-Social": {
    "prefix": "react-cdn-icon-Rede-Social",
    "body": [
      "<i className=\"bi bi-messenger\"></i>",
      "<i className=\"bi bi-pinterest\"></i>",
      "<i className=\"bi bi-instagram\"></i>",
      "<i className=\"bi bi-facebook\"></i>",
      "<i className=\"bi bi-youtube\"></i>",
      "<i className=\"bi bi-snapchat\"></i>",
      "<i className=\"bi bi-snapchat\"></i>",
      "<i className=\"bi bi-twitter\"></i>",
      "<i className=\"bi bi-twitter-x\"></i>",
      "<i className=\"bi bi-twitch\"></i>",
      "<i className=\"bi bi-tiktok\"></i>",
      "<i className=\"bi bi-vimeo\"></i>",
      "<i className=\"bi bi-wechat\"></i>",
      "<i className=\"bi bi-whatsapp\"></i>",
      "<i className=\"bi bi-Rede-Social\"></i>",
    ],
    "description": "react-cdn-icon-Rede-Social"
  },
  "react-cdn-icon-Telefone": {
    "prefix": "react-cdn-icon-Telefone",
    "body": [
      "<i className=\"bi bi-phone-flip\"></i>",
      "<i className=\"bi bi-phone\"></i>",
      "<i className=\"bi bi-phone-fill\"></i>",
      "<i className=\"bi bi-phone-vibrate\"></i>",
      "<i className=\"bi bi-phone-vibrate-fill\"></i>",
      "<i className=\"bi bi-telephone-x-fill\"></i>",
      "<i className=\"bi bi-telephone-x\"></i>",
      "<i className=\"bi bi-telephone-plus-fill\"></i>",
      "<i className=\"bi bi-telephone-plus\"></i>",
      "<i className=\"bi bi-telephone-outbound-fill\"></i>",
      "<i className=\"bi bi-telephone-outbound\"></i>",
      "<i className=\"bi bi-telephone-minus-fill\"></i>",
      "<i className=\"bi bi-telephone-minus\"></i>",
      "<i className=\"bi bi-telephone-inbound-fill\"></i>",
      "<i className=\"bi bi-telephone-inbound\"></i>",
      "<i className=\"bi bi-telephone-forward-fill\"></i>",
      "<i className=\"bi bi-telephone-forward\"></i>",
      "<i className=\"bi bi-telephone-fill\"></i>",
      "<i className=\"bi bi-telephone\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Telefone"
  },
  "react-cdn-icon-Pessoa-Usuario": {
    "prefix": "react-cdn-icon-Pessoa-Usuario",
    "body": [
      "<i className=\"bi bi-person-vcard\"></i>",
      "<i className=\"bi bi-person-vcard-fill\"></i>",
      "<i className=\"bi bi-person-video\"></i>",
      "<i className=\"bi bi-person-video2\"></i>",
      "<i className=\"bi bi-person-video3\"></i>",
      "<i className=\"bi bi-person-workspace\"></i>",
      "<i className=\"bi bi-person-wheelchair\"></i>",
      "<i className=\"bi bi-person-walking\"></i>",
      "<i className=\"bi bi-person-square\"></i>",
      "<i className=\"bi bi-person-standing-dress\"></i>",
      "<i className=\"bi bi-person-standing\"></i>",
      "<i className=\"bi bi-person-plus-fill\"></i>",
      "<i className=\"bi bi-person-raised-hand\"></i>",
      "<i className=\"bi bi-person-gear\"></i>",
      "<i className=\"bi bi-person-fill-slash\"></i>",
      "<i className=\"bi bi-person-fill-gear\"></i>",
      "<i className=\"bi bi-person-fill\"></i>",
      "<i className=\"bi bi-person-bounding-box\"></i>",
      "<i className=\"bi bi-people\"></i>",
      "<i className=\"bi bi-person-circle\"></i>",
      "<i className=\"bi bi-person\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Pessoa-Usuario"
  },
  "react-cdn-icon-Chave-Password": {
    "prefix": "react-cdn-icon-Chave-Password",
    "body": [
      "<i className=\"bi bi-key-fill\"></i>",
      "<i className=\"bi bi-key\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Chave-Password"
  },
  "react-cdn-icon-Imagem": {
    "prefix": "react-cdn-icon-Imagem",
    "body": [
      "<i className=\"bi bi-images\"></i>",
      "<i className=\"bi bi-image-fill\"></i>",
      "<i className=\"bi bi-image\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Imagem"
  },
  "react-cdn-icon-Casa-Home": {
    "prefix": "react-cdn-icon-Casa-Home",
    "body": [
      "<i className=\"bi bi-houses-fill\"></i>",
      "<i className=\"bi bi-houses-fill\"></i>",
      "<i className=\"bi bi-house-slash\"></i>",
      "<i className=\"bi bi-house-lock\"></i>",
      "<i className=\"bi bi-house-heart-fill\"></i>",
      "<i className=\"bi bi-house-heart\"></i>",
      "<i className=\"bi bi-house-gear-fill\"></i>",
      "<i className=\"bi bi-house-fill\"></i>",
      "<i className=\"bi bi-house-door-fill\"></i>",
      "<i className=\"bi bi-house-door\"></i>",
      "<i className=\"bi bi-house\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Casa-Home"
  },
  "react-cdn-icon-Mao-Positivo-Negativo": {
    "prefix": "react-cdn-icon-Mao-Positivo-Negativo",
    "body": [
      "<i className=\"bi bi-hand-thumbs-up\"></i>",
      "<i className=\"bi bi-hand-thumbs-down-fill\"></i>",
      "<i className=\"bi bi-hand-thumbs-down\"></i>",
      "<i className=\"bi bi-hand-index-thumb-fill\"></i>",
      "<i className=\"bi bi-hand-index-thumb\"></i>",
      "<i className=\"bi bi-hand-index\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Mao-Positivo-Negativo"
  },
  "react-cdn-icon-Grid-Tabela": {
    "prefix": "react-cdn-icon-Grid-Tabela",
    "body": [
      "<i className=\"bi bi-table\"></i>",
      "<i className=\"bi bi-grid-3x3\"></i>",
      "<i className=\"bi bi-grid-3x2\"></i>",
      "<i className=\"bi bi-grid\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Grid-Tabela"
  },
  "react-cdn-icon-Google-Local-Endereco": {
    "prefix": "react-cdn-icon-Google-Local-Endereco",
    "body": [
      "<i className=\"bi bi-pin-map\"></i>",
      "<i className=\"bi bi-pin-map-fill\"></i>",
      "<i className=\"bi bi-geo-alt-fill\"></i>",
      "<i className=\"bi bi-geo-alt\"></i>",
      "<i className=\"bi bi-geo\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Google-Local-Endereco"
  },
  "react-cdn-icon-Smile-Emoji-Carinha": {
    "prefix": "react-cdn-icon-Smile-Emoji-Carinha",
    "body": [
      "<i className=\"bi bi-emoji-frown-fill\"></i>",
      "<i className=\"bi bi-emoji-frown\"></i>",
      "<i className=\"bi bi-emoji-expressionless-fill\"></i>",
      "<i className=\"bi bi-emoji-expressionless\"></i>",
      "<i className=\"bi bi-emoji-heart-eyes\"></i>",
      "<i className=\"bi bi-emoji-smile\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Smile-Emoji-Carinha"
  },
  "react-cdn-icon-E-mail": {
    "prefix": "react-cdn-icon-E-mail",
    "body": [
      "<i className=\"bi bi-envelope-slash-fill\"></i>",
      "<i className=\"bi bi-envelope-slash\"></i>",
      "<i className=\"bi bi-envelope-paper-heart-fill\"></i>",
      "<i className=\"bi bi-envelope-paper-heart\"></i>",
      "<i className=\"bi bi-envelope-paper-fill\"></i>",
      "<i className=\"bi bi-envelope-paper\"></i>",
      "<i className=\"bi bi-envelope-open-heart-fill\"></i>",
      "<i className=\"bi bi-envelope-open-heart\"></i>",
      "<i className=\"bi bi-envelope-open\"></i>",
      "<i className=\"bi bi-envelope-heart-fill\"></i>",
      "<i className=\"bi bi-envelope-heart\"></i>",
      "<i className=\"bi bi-envelope-heart\"></i>",
      "<i className=\"bi bi-envelope-check\"></i>",
      "<i className=\"bi bi-envelope-at-fill\"></i>",
      "<i className=\"bi bi-envelope-at\"></i>",
      "<i className=\"bi bi-envelope-arrow-up-fill\"></i>",
      "<i className=\"bi bi-envelope-arrow-up\"></i>",
      "<i className=\"bi bi-envelope-arrow-down-fill\"></i>",
      "<i className=\"bi bi-envelope\"></i>",
      "",
    ],
    "description": "react-cdn-icon-E-mail"
  },
  "react-cdn-icon-Porta-Saida": {
    "prefix": "react-cdn-icon-Porta-Saida",
    "body": [
      "<i className=\"bi bi-door-open-fill\"></i>",
      "<i className=\"bi bi-door-open\"></i>",
      "<i className=\"bi bi-door-closed\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Porta-Saida"
  },
  "react-cdn-icon-Game-Jogo": {
    "prefix": "react-cdn-icon-Game-jpgp",
    "body": [
      "<i className=\"bi bi-joystick\"></i>",
      "<i className=\"bi bi-dpad\"></i>",
      "<i className=\"bi bi-dpad-fill\"></i>",
      "<i className=\"bi bi-dice-1\"></i>",
      "<i className=\"bi bi-dice-1-fill\"></i>",
      "<i className=\"bi bi-dice-2\"></i>",
      "<i className=\"bi bi-dice-2-fill\"></i>",
      "<i className=\"bi bi-dice-3\"></i>",
      "<i className=\"bi bi-dice-3-fill\"></i>",
      "<i className=\"bi bi-dice-3-fill\"></i>",
      "<i className=\"bi bi-dice-4\"></i>",
      "<i className=\"bi bi-dice-4-fill\"></i>",
      "<i className=\"bi bi-dice-5\"></i>",
      "<i className=\"bi bi-dice-5-fill\"></i>",
      "<i className=\"bi bi-dice-5-fill\"></i>",
      "<i className=\"bi bi-dice-6-fill\"></i>",
      "<i className=\"bi bi-discord\"></i>",
      "<i className=\"bi bi-controller\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Game-jpgp"
  },
  "react-cdn-icon-Geometria-Circulo-Meio-Proibido": {
    "prefix": "react-cdn-icon-Geometria-Circulo-Meio-Proibido",
    "body": [
      "<i className=\"bi bi-dash-circle-fill\"></i>",
      "<i className=\"bi bi-dash-circle-dotted\"></i>",
      "<i className=\"bi bi-dash-circle\"></i>",
      "<i className=\"bi bi-circle\"></i>",
      "<i className=\"bi bi-circle-fill\"></i>",
      "<i className=\"bi bi-circle-half\"></i>",
      "<i className=\"bi bi-slash-circle\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Geometria-Circulo-Meio-Proibido"
  },
  "react-cdn-icon-Geometria-Balao": {
    "prefix": "react-cdn-icon-Geometria-Balao",
    "body": [
      "<i className=\"bi bi-diamond\"></i>",
      "<i className=\"bi bi-diamond-half\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Geometria-Balao"
  },
  "react-cdn-icon-Computador-Impressora": {
    "prefix": "react-cdn-icon-Computador-Impressora",
    "body": [
      "<i className=\"bi bi-printer\"></i>",
      "<i className=\"bi bi-printer-fill\"></i>",
      "<i className=\"bi bi-display\"></i>",
      "<i className=\"bi bi-displayport\"></i>",
      "<i className=\"bi bi-displayport-fill\"></i>",
      "<i className=\"bi bi-device-hdd\"></i>",
      "<i className=\"bi bi-device-hdd-fill\"></i>",
      "<i className=\"bi bi-cpu\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Computador-Impressora"
  },
  "react-cdn-icon-Banco-Dados": {
    "prefix": "react-cdn-icon-Banco-Dados",
    "body": [
      "<i className=\"bi bi-database-x\"></i>",
      "<i className=\"bi bi-database-slash\"></i>",
      "<i className=\"bi bi-database-lock\"></i>",
      "<i className=\"bi bi-database-fill-gear\"></i>",
      "<i className=\"bi bi-database-exclamation\"></i>",
      "<i className=\"bi bi-database-down\"></i>",
      "<i className=\"bi bi-database-dash\"></i>",
      "<i className=\"bi bi-database-check\"></i>",
      "<i className=\"bi bi-database-add\"></i>",
      "<i className=\"bi bi-database\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Banco-Dados"
  },
  "react-cdn-icon-Dinheiro": {
    "prefix": "react-cdn-icon-Dinheiro",
    "body": [
      "<i className=\"bi bi-currency-dollar\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Dinheiro"
  },
  "react-cdn-icon-Bebida": {
    "prefix": "react-cdn-icon-Bebida",
    "body": [
      "<i className=\"bi bi-cup-straw\"></i>",
      "<i className=\"bi bi-cup-hot-fill\"></i>",
      "<i className=\"bi bi-cup-hot\"></i>",
      "<i className=\"bi bi-cup-fill\"></i>",
      "<i className=\"bi bi-cup\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Bebida"
  },
  "react-cdn-icon-Bebida-Chicara-Copo": {
    "prefix": "react-cdn-icon-Bebida-Chicara-Copo",
    "body": [
      "",
    ],
    "description": "react-cdn-icon-Bebida-Chicara-Copo"
  },
  "react-cdn-icon-Cartao-Credito": {
    "prefix": "react-cdn-icon-Cartao-Credito",
    "body": [
      "<i className=\"bi bi-credit-card\"></i>",
      "<i className=\"bi bi-credit-card-2-back\"></i>",
      "<i className=\"bi bi-credit-card-2-back-fill\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Cartao-Credito"
  },
  "react-cdn-icon-Cone": {
    "prefix": "react-cdn-icon-Cone",
    "body": [
      "<i className=\"bi bi-cone-striped\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Cone"
  },
  "react-cdn-icon-Codigo": {
    "prefix": "react-cdn-icon-Codigo",
    "body": [
      "<i className=\"bi bi-code-square\"></i>",
      "<i className=\"bi bi-code-slash\"></i>",
      "<i className=\"bi bi-code\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Codigo"
  },
  "react-cdn-icon-Nuvem": {
    "prefix": "react-cdn-icon-Nuvem",
    "body": [
      "<i className=\"bi bi-cloudy-fill\"></i>",
      "<i className=\"bi bi-cloudy\"></i>",
      "<i className=\"bi bi-clouds-fill\"></i>",
      "<i className=\"bi bi-clouds\"></i>",
      "<i className=\"bi bi-cloud-upload\"></i>",
      "<i className=\"bi bi-cloud-sun-fill\"></i>",
      "<i className=\"bi bi-cloud-sun\"></i>",
      "<i className=\"bi bi-cloud-snow-fill\"></i>",
      "<i className=\"bi bi-cloud-snow\"></i>",
      "<i className=\"bi bi-cloud-sleet-fill\"></i>",
      "<i className=\"bi bi-cloud-sleet\"></i>",
      "<i className=\"bi bi-cloud-slash\"></i>",
      "<i className=\"bi bi-cloud-rain-heavy-fill\"></i>",
      "<i className=\"bi bi-cloud-rain-heavy\"></i>",
      "<i className=\"bi bi-cloud-rain-fill\"></i>",
      "<i className=\"bi bi-cloud-rain\"></i>",
      "<i className=\"bi bi-cloud-plus-fill\"></i>",
      "<i className=\"bi bi-cloud-plus\"></i>",
      "<i className=\"bi bi-cloud-moon-fill\"></i>",
      "<i className=\"bi bi-cloud-moon\"></i>",
      "<i className=\"bi bi-cloud-minus-fill\"></i>",
      "<i className=\"bi bi-cloud-minus\"></i>",
      "<i className=\"bi bi-cloud-lightning-rain-fill\"></i>",
      "<i className=\"bi bi-cloud-lightning-rain\"></i>",
      "<i className=\"bi bi-cloud-lightning-fill\"></i>",
      "<i className=\"bi bi-cloud-lightning\"></i>",
      "<i className=\"bi bi-cloud-haze2\"></i>",
      "<i className=\"bi bi-cloud-haze\"></i>",
      "<i className=\"bi bi-cloud-hail-fill\"></i>",
      "<i className=\"bi bi-cloud-hail\"></i>",
      "<i className=\"bi bi-cloud-fog2-fill\"></i>",
      "<i className=\"bi bi-cloud-fog2\"></i>",
      "<i className=\"bi bi-cloud-fill\"></i>",
      "<i className=\"bi bi-cloud-drizzle-fill\"></i>",
      "<i className=\"bi bi-cloud-drizzle\"></i>",
      "<i className=\"bi bi-cloud-download\"></i>",
      "<i className=\"bi bi-cloud-check-fill\"></i>",
      "<i className=\"bi bi-cloud-check\"></i>",
      "<i className=\"bi bi-cloud-arrow-up\"></i>",
      "<i className=\"bi bi-cloud-arrow-down-fill\"></i>",
      "<i className=\"bi bi-cloud-arrow-down\"></i>",
      "<i className=\"bi bi-cloud\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Nuvem"
  },
  "react-cdn-icon-Relogio": {
    "prefix": "react-cdn-icon-Relogio",
    "body": [
      "<i className=\"bi bi-clock\"></i>",
      "<i className=\"bi bi-clock-history\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Relogio"
  },
  "react-cdn-icon-Prancheta-Colar-Grafico": {
    "prefix": "react-cdn-icon-Prancheta-Colar-Grafico",
    "body": [
      "<i className=\"bi bi-graph-up-arrow\"></i>",
      "<i className=\"bi bi-graph-up\"></i>",
      "<i className=\"bi bi-graph-down-arrow\"></i>",
      "<i className=\"bi bi-graph-down\"></i>",
      "<i className=\"bi bi-clipboard2-x\"></i>",
      "<i className=\"bi bi-clipboard2-pulse\"></i>",
      "<i className=\"bi bi-clipboard2-plus\"></i>",
      "<i className=\"bi bi-clipboard2-minus\"></i>",
      "<i className=\"bi bi-clipboard2-heart\"></i>",
      "<i className=\"bi bi-clipboard2-data-fill\"></i>",
      "<i className=\"bi bi-clipboard2-data\"></i>",
      "<i className=\"bi bi-clipboard2-check\"></i>",
      "<i className=\"bi bi-clipboard2\"></i>",
      "<i className=\"bi bi-clipboard-x\"></i>",
      "<i className=\"bi bi-clipboard-pulse\"></i>",
      "<i className=\"bi bi-clipboard-plus\"></i>",
      "<i className=\"bi bi-clipboard-minus\"></i>",
      "<i className=\"bi bi-clipboard-heart\"></i>",
      "<i className=\"bi bi-clipboard-data\"></i>",
      "<i className=\"bi bi-clipboard-check\"></i>",
      "<i className=\"bi bi-clipboard\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Prancheta-Colar-Grafico"
  },
  "react-cdn-icon-Mensagem": {
    "prefix": "react-cdn-icon-Mensagem",
    "body": [
      "<i className=\"bi bi-chat-text\"></i>",
      "<i className=\"bi bi-chat-square-text\"></i>",
      "<i className=\"bi bi-chat-square-quote\"></i>",
      "<i className=\"bi bi-chat-square-heart\"></i>",
      "<i className=\"bi bi-chat-square-dots\"></i>",
      "<i className=\"bi bi-chat-right-text\"></i>",
      "<i className=\"bi bi-chat-right-quote\"></i>",
      "<i className=\"bi bi-chat-right-heart\"></i>",
      "<i className=\"bi bi-chat-right-dots\"></i>",
      "<i className=\"bi bi-chat-right\"></i>",
      "<i className=\"bi bi-chat-quote\"></i>",
      "<i className=\"bi bi-chat-left-text\"></i>",
      "<i className=\"bi bi-chat-left-quote\"></i>",
      "<i className=\"bi bi-chat-left-heart\"></i>",
      "<i className=\"bi bi-chat-left-dots\"></i>",
      "<i className=\"bi bi-chat-left\"></i>",
      "<i className=\"bi bi-chat-heart\"></i>",
      "<i className=\"bi bi-chat-dots\"></i>",
      "<i className=\"bi bi-chat\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Mensagem"
  },
  "react-cdn-icon-Carrinho": {
    "prefix": "react-cdn-icon-Carrinho",
    "body": [
      "<i className=\"bi bi-cart\"></i>",
      "<i className=\"bi bi-cart-check\"></i>",
      "<i className=\"bi bi-cart-dash\"></i>",
      "<i className=\"bi bi-cart-plus\"></i>",
      "<i className=\"bi bi-cart-x\"></i>",
      "<i className=\"bi bi-cart2\"></i>",
      "<i className=\"bi bi-cart3\"></i>",
      "<i className=\"bi bi-cart4\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Carrinho"
  },
  "react-cdn-icon-Text": {
    "prefix": "react-cdn-icon-Text",
    "body": [
      "<i className=\"bi bi-card-text\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Text"
  },
  "react-cdn-icon-Card-List-Check": {
    "prefix": "react-cdn-icon-Card-List-Check",
    "body": [
      "<i className=\"bi bi-card-checklist\"></i>",
      "<i className=\"bi bi-card-list\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Card-List-Check"
  },
  "react-cdn-icon-Carro": {
    "prefix": "react-cdn-icon-Carro",
    "body": [
      "<i className=\"bi bi-car-front\"></i>",
      "<i className=\"bi bi-car-front-fill\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Carro"
  },
  "react-cdn-icon-Camera-Video": {
    "prefix": "react-cdn-icon-Camera-Video",
    "body": [
      "<i className=\"bi bi-camera-video-off\"></i>",
      "<i className=\"bi bi-camera-video\"></i>",
      "<i className=\"bi bi-camera-reels\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Camera-Video"
  },
  "react-cdn-icon-Camera-Foto": {
    "prefix": "react-cdn-icon-Camera-Foto",
    "body": [
      "<i className=\"bi bi-camera\"></i>",
      "<i className=\"bi bi-camera2\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Camera-Foto"
  },
  "react-cdn-icon-Calendario": {
    "prefix": "react-cdn-icon-Calendario",
    "body": [
      "<i className=\"bi bi-calendar-check\"></i>",
      "<i className=\"bi bi-calendar-date\"></i>",
      "<i className=\"bi bi-calendar-day\"></i>",
      "<i className=\"bi bi-calendar-heart\"></i>",
      "<i className=\"bi bi-calendar-minus\"></i>",
      "<i className=\"bi bi-calendar-month\"></i>",
      "<i className=\"bi bi-calendar-plus\"></i>",
      "<i className=\"bi bi-calendar-x\"></i>",
      "<i className=\"bi bi-calendar2-month\"></i>",
      "<i className=\"bi bi-calendar3\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Calendario"
  },
  "react-cdn-icon-Calculadora": {
    "prefix": "react-cdn-icon-Calculadora",
    "body": [
      "<i className=\"bi bi-calculator\"></i>",
      "<i className=\"bi bi-calculator-fill\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Calculadora"
  },
  "react-cdn-icon-Bolo": {
    "prefix": "react-cdn-icon-Bolo",
    "body": [
      "<i className=\"bi bi-cake\"></i>",
      "<i className=\"bi bi-cake-fill\"></i>",
      "<i className=\"bi bi-cake2\"></i>",
      "<i className=\"bi bi-cake2-fill\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Bolo"
  },
  "react-cdn-icon-Onibus": {
    "prefix": "react-cdn-icon-Onibus",
    "body": [
      "<i className=\"bi bi-bus-front\"></i>",
      "<i className=\"bi bi-bus-front-fill\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Onibus"
  },
  "react-cdn-icon-Bug": {
    "prefix": "react-cdn-icon-Bug",
    "body": [
      "<i className=\"bi bi-bug\"></i>",
    ],
    "description": "react-cdn-icon-Bug"
  },
  "react-cdn-icon-Navegadores": {
    "prefix": "react-cdn-icon-Navegadores",
    "body": [
      "<i className=\"bi bi-browser-chrome\"></i>",
      "<i className=\"bi bi-browser-edge\"></i>",
      "<i className=\"bi bi-browser-firefox\"></i>",
      "<i className=\"bi bi-browser-safari\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Navegadores"
  },
  "react-cdn-icon-Sol-Ing-Iang": {
    "prefix": "react-cdn-icon-Sol-Luz-Ing-Iang",
    "body": [
      "<i className=\"bi bi-brightness-alt-high-fill\"></i>",
      "<i className=\"bi bi-brightness-high\"></i>",
      "<i className=\"bi bi-brightness-low-fill\"></i>",
      "<i className=\"bi bi-brilliance\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Sol-Ing-Iang"
  },
  "react-cdn-icon-Cubo": {
    "prefix": "react-cdn-icon-Cubo",
    "body": [
      "<i className=\"bi bi-box\"></i>",
    ],
    "description": "react-cdn-icon-Cubo"
  },
  "react-cdn-icon-Radio-Som": {
    "prefix": "react-cdn-icon-Radio-Som",
    "body": [
      "<i className=\"bi bi-boombox\"></i>",
    ],
    "description": "react-cdn-icon-Radio-Som"
  },
  "react-cdn-icon-Favorito": {
    "prefix": "react-cdn-icon-Favorito",
    "body": [
      "<i className=\"bi bi-bookmark-heart\"></i>",
      "<i className=\"bi bi-bookmark-star\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Favorito"
  },
  "react-cdn-icon-Livro-Meio": {
    "prefix": "react-cdn-icon-Livro-Meio",
    "body": [
      "<i className=\"bi bi-book-half\"></i>",
    ],
    "description": "react-cdn-icon-Livro-Meio"
  },
  "react-cdn-icon-Bluetootc": {
    "prefix": "react-cdn-icon-Bluetootc",
    "body": [
      "<i className=\"bi bi-bluetooth\"></i>",
    ],
    "description": "react-cdn-icon-Bluetootc"
  },
  "react-cdn-icon-Busca-Binoculo": {
    "prefix": "react-cdn-icon-Busca-Binoculo",
    "body": [
      "<i className=\"bi bi-search\"></i>",
      "<i className=\"bi bi-binoculars\"></i>",
    ],
    "description": "react-cdn-icon-Busca-Binoculo"
  },
  "react-cdn-icon-Microsoft-Bing": {
    "prefix": "react-cdn-icon-Microsoft-Bing",
    "body": [
      "<i className=\"bi bi-microsoft\"></i>",
      "<i className=\"bi bi-bing\"></i>",
    ],
    "description": "react-cdn-icon-Microsoft-Bing"
  },
  "react-cdn-icon-Sino": {
    "prefix": "react-cdn-icon-Sino",
    "body": [
      "<i className=\"bi bi-bell\"></i>",
    ],
    "description": "react-cdn-icon-Sino"
  },
  "react-cdn-icon-Bateria": {
    "prefix": "react-cdn-icon-Bateria",
    "body": [
      "<i className=\"bi bi-battery-half\"></i>",
    ],
    "description": "react-cdn-icon-Bateria"
  },
  "react-cdn-icon-Graficos": {
    "prefix": "react-cdn-icon-Graficos",
    "body": [
      "<i className=\"bi bi-bar-chart-steps\"></i>",
      "",
    ],
    "description": "react-cdn-icon-Graficos"
  },
  "react-cdn-icon-Grafico-Sinal-Celular": {
    "prefix": "react-cdn-icon-Grafico-Sinal-Celular",
    "body": [
      "<i className=\"bi bi-reception-4\"></i>",
      "<i className=\"bi bi-reception-3\"></i>",
      "<i className=\"bi bi-reception-2\"></i>",
      "<i className=\"bi bi-reception-1\"></i>",
      "<i className=\"bi bi-reception-0\"></i>",
      "<i className=\"bi bi-bar-chart\"></i>",
    ],
    "description": "react-cdn-icon-Grafico-Sinal-Celular"
  },
  "react-cdn-icon-Banco": {
    "prefix": "react-cdn-icon-Banco",
    "body": [
      "<i className=\"bi bi-bank\"></i>",
    ],
    "description": "react-cdn-icon-Banco"
  },
  "react-cdn-icon-Curativo-Bandaid": {
    "prefix": "react-cdn-icon-Curativo-Bandaid",
    "body": [
      "<i className=\"bi bi-bandaid\"></i>",
    ],
    "description": "react-cdn-icon-Curativo-Bandaid"
  },
  "react-cdn-icon-Proibido": {
    "prefix": "react-cdn-icon-Proibido",
    "body": [
      "<i className=\"bi bi-ban\"></i>",
    ],
    "description": "react-cdn-icon-Proibido"
  },
  "react-cdn-icon-Balao": {
    "prefix": "react-cdn-icon-Balao",
    "body": [
      "<i className=\"bi bi-balloon\"></i>",
    ],
    "description": "react-cdn-icon-Balao"
  },
  "react-cdn-icon-Sacola": {
    "prefix": "react-cdn-icon-Sacola",
    "body": [
      "<i className=\"bi bi-bag-check\"></i>",
    ],
    "description": "react-cdn-icon-Sacola"
  },
  "react-cdn-icon-Certificado": {
    "prefix": "react-cdn-icon-Certificado",
    "body": [
      "<i className=\"bi bi-award-fill\"></i>",
    ],
    "description": "react-cdn-icon-Certificado"
  },
  "react-cdn-icon-Arroba": {
    "prefix": "react-cdn-icon-Arroba",
    "body": [
      "<i className=\"bi bi-at\"></i>",
    ],
    "description": "react-cdn-icon-Arroba"
  },
  "react-cdn-icon-Asterisco": {
    "prefix": "react-cdn-icon-Asterisco",
    "body": [
      "<i className=\"bi bi-asterisk\"></i>",
    ],
    "description": "react-cdn-icon-Asterisco"
  },
  "react-cdn-icon-Coracao-Flecha": {
    "prefix": "react-cdn-icon-Coracao-Flecha",
    "body": [
      "<i className=\"bi bi-arrow-through-heart\"></i>",
    ],
    "description": "react-cdn-icon-Coracao-Flecha"
  },
  "react-cdn-icon-Atualizar-Repetir": {
    "prefix": "react-cdn-icon-Atualizar-Repetir",
    "body": [
      "<i className=\"bi bi-repeat\"></i>",
      "<i className=\"bi bi-repeat-1\"></i>",
      "<i className=\"bi bi-arrow-repeat\"></i>",
    ],
    "description": "react-cdn-icon-Atualizar-Repetir"
  },
  "react-cdn-icon-Mac": {
    "prefix": "react-cdn-icon-Mac",
    "body": [
      "<i className=\"bi bi-apple\"></i>",
    ],
    "description": "react-cdn-icon-Mac"
  },
  "react-cdn-icon-Android": {
    "prefix": "react-cdn-icon-Android",
    "body": [
      "<i className=\"bi bi-android2\"></i>",
    ],
    "description": "react-cdn-icon-Android"
  },
  "react-cdn-icon-Amazon": {
    "prefix": "react-cdn-icon-Amazon",
    "body": [
      "<i className=\"bi bi-amazon\"></i>",
    ],
    "description": "react-cdn-icon-Amazon"
  },
  "react-cdn-icon-Alex": {
    "prefix": "react-cdn-icon-Alex",
    "body": [
      "<i className=\"bi bi-alexa\"></i>",
    ],
    "description": "react-cdn-icon-Alex"
  },
  "react-cdn-icon-Aviao": {
    "prefix": "react-cdn-icon-Aviao",
    "body": [
      "<i className=\"bi bi-airplane\"></i>",
    ],
    "description": "react-cdn-icon-Aviao"
  },
  "react-cdn-icon-Calendario3": {
    "prefix": "react-cdn-icon-Calendario3",
    "body": [
      "<i className=\"bi bi-calendar3\"></i>",
    ],
    "description": "react-cdn-icon-Calendario3"
  },
  "react-cdn-icon-Chave": {
    "prefix": "react-cdn-icon-Chave",
    "body": [
      "<i className=\"bi bi-key\"></i>",
    ],
    "description": "react-cdn-icon-Chave"
  },
  "react-cdn- ": {
    "prefix": "react-cdn- ",
    "body": [
      "&nbsp;",
    ],
    "description": "react-cdn- "
  },
  "react-cdn-icon-tab": {
    "prefix": "react-cdn-icon-tab",
    "body": [
      "&emsp;",
    ],
    "description": "react-cdn-icon-tab"
  },
  "react-cdn-comentario": {
    "prefix": "react-cdn-comentario",
    "body": [
      " ",
      "{/* */}",
      " "
    ],
    "description": "react-cdn-comentario"
  }
  // "script-modelo": {
  // 	"prefix": "script-modelo",
  // 	"body": [
  // 		""
  // 	],
  // 	"description": "Modelo"
  // },
}