{
	// Place your snippets for dart here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"dart-comandos-flutter": {
		"prefix": "dart-comandos-flutter",
		"body": [
			"// Comandos para gerenciamento de projetos:",
			"// ",
			"// flutter create: Cria um novo projeto Flutter.",
			"// flutter pub get: Baixa as dependências do projeto.",
			"// flutter pub upgrade: Atualiza as dependências do projeto.",
			"// flutter analyze: Analisa o código do projeto em busca de erros e avisos.",
			"// flutter doctor: Verifica se o ambiente de desenvolvimento está configurado corretamente.",
			"// Comandos para execução e testes:",
			"// ",
			"// flutter run: Executa o aplicativo no emulador ou dispositivo real.",
			"// flutter test: Executa os testes do aplicativo.",
			"// flutter build: Compila o aplicativo para um formato que pode ser distribuído.",
			"// Comandos para gerenciamento de canais:",
			"// ",
			"// flutter channel ls: Lista os canais Flutter disponíveis.",
			"// flutter channel switch: Muda o canal Flutter atual.",
			"// Comandos para obtenção de ajuda:",
			"// ",
			"// flutter help: Mostra a ajuda para um comando específico.",
			"// flutter --help: Mostra a ajuda geral para a ferramenta de linha de comando Flutter.",
			"// Outros comandos úteis:",
			"// ",
			"// flutter clean: Limpa os arquivos temporários do projeto.",
			"// flutter logs: Mostra os logs do aplicativo.",
			"// flutter devices: Lista os dispositivos conectados.",
			"// Observações:",
			"// ",
			"// Esta lista não é exaustiva, existem outros comandos disponíveis na ferramenta de linha de comando Flutter.",
			"// Para mais informações sobre um comando específico, use o comando flutter help <nome do comando>.",
			"// Você também pode encontrar mais informações sobre a ferramenta de linha de comando Flutter na documentação oficial: https://docs.flutter.dev/reference/flutter-cli",
			"// Dicas:",
			"// ",
			"// Aprenda atalhos de teclado para os comandos que você usa com mais frequência.",
			"// Use um script para automatizar tarefas comuns.",
			"// Crie um alias para comandos longos ou complexos.",
			"// Comandos para gerenciamento de projetos:",
			"// ",
			"// flutter create: Cria um novo projeto Flutter.",
			"// flutter pub get: Baixa as dependências do projeto.",
			"// flutter pub upgrade: Atualiza as dependências do projeto.",
			"// flutter analyze: Analisa o código do projeto em busca de erros e avisos.",
			"// flutter doctor: Verifica se o ambiente de desenvolvimento está configurado corretamente.",
			"// Comandos para execução e testes:",
			"// ",
			"// flutter run: Executa o aplicativo no emulador ou dispositivo real.",
			"// flutter test: Executa os testes do aplicativo.",
			"// flutter build: Compila o aplicativo para um formato que pode ser distribuído.",
			"// Comandos para gerenciamento de canais:",
			"// ",
			"// flutter channel ls: Lista os canais Flutter disponíveis.",
			"// flutter channel switch: Muda o canal Flutter atual.",
			"// Comandos para obtenção de ajuda:",
			"// ",
			"// flutter help: Mostra a ajuda para um comando específico.",
			"// flutter --help: Mostra a ajuda geral para a ferramenta de linha de comando Flutter.",
			"// Outros comandos úteis:",
			"// ",
			"// flutter clean: Limpa os arquivos temporários do projeto.",
			"// flutter logs: Mostra os logs do aplicativo.",
			"// flutter devices: Lista os dispositivos conectados.",
			"// Observações:",
			"// ",
			"// Esta lista não é exaustiva, existem outros comandos disponíveis na ferramenta de linha de comando Flutter.",
			"// Para mais informações sobre um comando específico, use o comando flutter help <nome do comando>.",
			"// Você também pode encontrar mais informações sobre a ferramenta de linha de comando Flutter na documentação oficial: https://docs.flutter.dev/reference/flutter-cli",
			"// Dicas:",
			"// ",
			"// Aprenda atalhos de teclado para os comandos que você usa com mais frequência.",
			"// Use um script para automatizar tarefas comuns.",
			"// Crie um alias para comandos longos ou complexos.",
			"// ",
			"  "
		],
		"description": "dart-comandos-flutter"
	},
	"dart-estrutura-flutter": {
		"prefix": "dart-estrutura-flutter",
		"body": [
			"// /lib",
			"// |-- /models",
			"// |   |-- model.dart",
			"// |   |-- user.dart",
			"// |-- /services",
			"// |   |-- api_service.dart",
			"// |   |-- authentication_service.dart",
			"// |-- /utils",
			"// |   |-- constants.dart",
			"// |   |-- router.dart",
			"// |-- /viewmodels",
			"// |   |-- /home",
			"// |   |   |-- home_viewmodel.dart",
			"// |   |-- /login",
			"// |   |   |-- login_viewmodel.dart",
			"// |   |-- /settings",
			"// |   |   |-- settings_viewmodel.dart",
			"// |-- /views",
			"// |   |-- /home",
			"// |   |   |-- home_view.dart",
			"// |   |-- /login",
			"// |   |   |-- login_view.dart",
			"// |   |-- /settings",
			"// |   |   |-- settings_view.dart",
			"// |-- /widgets",
			"// |   |-- head_widgets.dart",
			"// |   |-- nav_widgets.dart",
			"// /main.dart",
			"//   "
		],
		"description": "dart-estrutura-flutter"
	},
	"dart-main": {
		"prefix": "dart-main",
		"body": [
			" void main() {",
			"  // home... ",
			"   ",
			" }",
			"  "
		],
		"description": "dart-main"
	},
	"dart-001-void-main-import": {
		"prefix": "dart-001-void-main-import",
		"body": [
			" import 'package:flutter/material.dart';",
			" ",
			" void main() {",
			"   runApp( const MyApp());",
			" }",
			" ",
			" class MyApp extends StatelessWidget {",
			"   const MyApp({super.key});",
			"   @override",
			"   Widget build(BuildContext context) {",
			"     return const MaterialApp(",
			"         // ... home",
			"         );",
			"   }",
			" }",
			"",
			"// [1] - import 'package:flutter/material.dart';",
			"// Esta linha importa o pacote material.dart, que contém a biblioteca de widgets ",
			"// do Material Design e outras funcionalidades essenciais do Flutter. O Material ",
			"// Design é um sistema de design desenvolvido pelo Google que oferece diretrizes ",
			"// de UI/UX para aplicativos móveis e web.",
			"",
			"// [2] - void main() { runApp(MyApp()); }",
			"// |-- Esta é a função principal do aplicativo Flutter, onde a execução começa. ",
			"// A função runApp() infla o widget dado e o anexa à tela. O widget passado para ",
			"// runApp() torna-se a raiz da árvore de widgets.",
			"// |-- MyApp() é geralmente uma classe que você define, que estende um widget, ",
			"// muitas vezes um StatelessWidget ou StatefulWidget, dependendo se o estado é ",
			"// gerenciado ou não.",
			"",
			"// [3] - class MyApp extends StatelessWidget { ... }",
			"// |-- MyApp é um widget personalizado, neste caso, um StatelessWidget. Widgets que ",
			"// não requerem manutenção de estado interno geralmente herdam de StatelessWidget.",
			"// |-- StatelessWidget é uma classe base para widgets que não requerem estados mutáveis.",
			"",
			"// [4] - Método build(BuildContext context)",
			"// |-- Cada widget StatelessWidget deve sobrescrever o método build, que descreve ",
			"// como exibir o widget em termos de outros widgets de nível inferior. O método ",
			"// build retorna um Widget e é chamado sempre que é necessário redesenhar a interface ",
			"// (por exemplo, em mudanças de tamanho, orientação ou tema).",
			"// MaterialApp(...)",
			"",
			"// [5] - O MaterialApp é um widget conveniente que envolve vários widgets que são ",
			"// comumente necessários para aplicações de material design. Ele é baseado no ",
			"// WidgetsApp, que por sua vez inclui um Navigator para gerenciar uma pilha de ",
			"// widgets com \"telas\" e também um Theme para compartilhar cores e estilos ",
			"// tipográficos por todo o aplicativo.",
			"  "
		],
		"description": "dart-001-void-main-import"
	},
	"dart-material": {
		"prefix": "dart-material",
		"body": [
			"import 'package:flutter/material.dart';",
			"  "
		],
		"description": "dart-material"
	},
	"dart-import-absolut": {
		"prefix": "dart-import-absolut",
		"body": [
			" // Importando um arquivo utilizando o caminho absoluto",
			" // import 'package:my_app/viewmodels/...';",
			" // import 'package:my_app/services/...';",
			" // import 'package:my_app/widgets/...';",
			" // import 'package:my_app/models/...';",
			" // import 'package:my_app/utils/...';",
			" // import 'package:my_app/views/...';",
			"  "
		],
		"description": "dart-import-absolut"
	},
	"dart-route-dynamic": {
		"prefix": "dart-route-dynamic",
		"body": [
			" Route<dynamic> generateRoute(RouteSettings settings) {",
			"   switch (settings.name) {",
			"     case '/home':",
			"       return MaterialPageRoute(builder: (_) => HomeView());",
			"  // case '/login':",
			"  //   return MaterialPageRoute(builder: (_) => LoginView());",
			"  // case '/settings':",
			"  //   return MaterialPageRoute(builder: (_) => SettingsView());",
			"     default:",
			"       return MaterialPageRoute(builder: (_) => Scaffold(",
			"         body: Center(",
			"           child: Text('No route defined for ${settings.name}'),",
			"         ),",
			"       ));",
			"   }",
			" }",
			"  "
		],
		"description": "dart-route-dynamic"
	},
	"dart-route-textbutton-in-children-Widget": {
		"prefix": "dart-route-textbutton-in-children-Widget",
		"body": [
			" TextButton(",
			"    onPressed: () {",
			"      Navigator.pushNamed(context, '/home');",
			"    },",
			"    child: const Row(",
			"      mainAxisSize: MainAxisSize.min,",
			"      children: <Widget>[",
			"        Icon(Icons.home),",
			"        SizedBox(width: 8),",
			"        Text('Ir para Home'),",
			"      ],",
			"    ),",
			"  ),",
			"  "
		],
		"description": "dart-route-textbutton-in-children-Widget"
	},
	"dart-route-inkwell-child-image-asset": {
		"prefix": "dart-route-inkwell-child-image-asset",
		"body": [
			" InkWell(",
			"  onTap: () {",
			"    Navigator.pushNamed(context, '/algumaRota');",
			"  },",
			"  child: Image.asset('assets/images/ods/allods.jpg'),",
			" )",
			" ",
			" // flutter:",
			" //   assets:",
			" //     - assets/",
			"  "
		],
		"description": "dart-route-inkwell-child-image-asset"
	},
	"dart-main-routes": {
		"prefix": "dart-main-routes",
		"body": [
			"import 'package:flutter/material.dart';",
			"import 'package:mobiapp2/utils/router.dart';",
			"",
			"void main() {",
			"  runApp(const MyApp());",
			"}",
			"  ",
			" class MyApp extends StatelessWidget {",
			"   const MyApp({super.key});",
			"   @override",
			"   Widget build(BuildContext context) {",
			"     return MaterialApp(",
			"       title: 'Flutter Demo',",
			"       theme: ThemeData(",
			"         primarySwatch: Colors.blue,",
			"         visualDensity: VisualDensity.adaptivePlatformDensity,",
			"       ),",
			"       initialRoute: '/login',",
			"       onGenerateRoute: generateRoute,",
			"     );",
			"   }",
			" }",
			"  "
		],
		"description": "dart-main-routes"
	},
	"dart-btn-navegacao": {
		"prefix": "dart-btn-navegacao",
		"body": [
			" ElevatedButton(",
			"   onPressed: () {",
			"     // Navegação",
			"     Navigator.pushNamed(context, '/home');",
			"   },",
			"   child: Text('Login'),",
			" )",
			"  "
		],
		"description": "dart-btn-navegacao"
	},
	"dart-002-home-scaffold": {
		"prefix": "dart-002-home-scaffold",
		"body": [
			" home: Scaffold(",
			" // ... body ...",
			" ),",
			"  "
		],
		"description": "dart-002-home-scaffold"
	},
	"dart-003-in-home-appbar-out-body": {
		"prefix": "dart-003-in-home-appbar-out-body",
		"body": [
			" appBar: AppBar(",
			"   title: Text('Exemplo de Alinhamento'),",
			" centerTitle: false,",
			" ),",
			"  "
		],
		"description": "dart-003-in-home-appbar-out-body"
	},
	"dart-004-body-center-in-home": {
		"prefix": "dart-004-body-center-in-home",
		"body": [
			" body: Center(",
			"   // ...",
			" ),",
			"  "
		],
		"description": "dart-004-body-center-in-home"
	},
	"dart-004-body-align-in-home": {
		"prefix": "dart-004-body-align-in-home",
		"body": [
			" body: Align(",
			"   alignment: Alignment.topCenter,",
			"   // ...",
			" ),",
			"  "
		],
		"description": "dart-004-body-align-in-home"
	},
	"dart-004-body-column-for-children-in-home": {
		"prefix": "dart-004-body-column-for-children-in-home",
		"body": [
			" body: Column(",
			"   mainAxisSize: MainAxisSize.min,",
			"   //...",
			" ),",
			"  "
		],
		"description": "dart-004-body-column-for-children-in-home"
	},
	"dart-004-body-singleChildScrollView-in-home": {
		"prefix": "dart-004-body-singleChildScrollView-in-home",
		"body": [
			" body: SingleChildScrollView(",
			"   child: Column(",
			"     mainAxisSize: MainAxisSize.min,",
			"     children: <Widget>[",
			"       Row(",
			"         mainAxisAlignment: MainAxisAlignment.center,",
			"         children: [",
			"           // Container",
			"           // SizedBox",
			"           // text",
			"         ],",
			"       ),",
			"     ],",
			"   ),",
			" ),",
			"  "
		],
		"description": "dart-004-body-singleChildScrollView-in-home"
	},
	"dart-004-body-center-child-image-asset": {
		"prefix": "dart-004-body-center-child-image-asset",
		"body": [
			" body: Center(",
			"          child: Image.asset('assets/images/ods/allods.jpg'),",
			"        ),",
			" ",
			" // flutter:",
			" //   assets:",
			" //     - assets/",
			"  "
		],
		"description": "dart-004-body-center-child-image-asset"
	},
	"dart-005-children-Widget": {
		"prefix": "dart-005-children-Widget",
		"body": [
			" children: <Widget>[",
			"   //...text ...container",
			" ],",
			"  "
		],
		"description": "dart-005-children-Widget"
	},
	"dart-006-padding-in-children-Widget": {
		"prefix": "dart-006-padding-in-children-Widget",
		"body": [
			"const Padding(",
			"    padding: EdgeInsets.all(20.0),",
			"    ... text",
			"  ),",
			"  "
		],
		"description": "dart-006-padding-in-children-Widget"
	},
	"dart-006-expanded-in-children-Widget": {
		"prefix": "dart-006-expanded-in-children-Widget",
		"body": [
			" Expanded( // Adicionado para evitar overflow",
			"   child: const Text(",
			"     'Este é um exemplo de texto em Flutter que deve ser quebrado em várias linhas para evitar overflow. Este texto é um pouco longo para estar na mesma linha do container.',",
			"     softWrap: true, // Quebra de linha automática",
			"     overflow: TextOverflow.clip, // Prevenindo o texto de sobrepor outros elementos",
			"     style: TextStyle(fontSize: 16),",
			"   ),",
			" ),",
			"  "
		],
		"description": "dart-006-expanded-in-children-Widget"
	},
	"dart-007-in-children-Widget-row": {
		"prefix": "dart-007-in-children-Widget-row",
		"body": [
			" Row(",
			"   mainAxisAlignment: MainAxisAlignment.center,",
			"   children: [",
			"    // ... container",
			"     const SizedBox(width: 10),",
			"     // ... text",
			"   ],",
			" ),",
			" const SizedBox(height: 40),",
			"  "
		],
		"description": "dart-007-in-children-Widget-row"
	},
	"dart-child-text": {
		"prefix": "dart-child-text",
		"body": [
			" child: Text(",
			"   'Este é um exemplo de texto justificado em Flutter. Justificar o texto faz com que ele se alinhe igualmente às margens esquerda e direita, criando um visual uniforme.',",
			"    softWrap: true, // Quebra de linha automática",
			"    overflow: TextOverflow",
			"        .clip, // Prevenindo o texto de sobrepor outros elementos",
			"   textAlign: TextAlign.justify,",
			"   style: TextStyle(fontSize: 16),",
			" ),",
			"// Em style: TextStyle(), acrescentar",
			"// color: Define a cor do texto.",
			"// fontSize: Especifica o tamanho do texto.",
			"// fontWeight: Ajusta o peso da fonte, como bold para negrito.",
			"// fontStyle: Permite escolher entre normal ou itálico.",
			"// decoration: Adiciona decorações como underline (sublinhado), overline (sobrelinha) ou lineThrough (tachado).",
			"// decorationColor: Define a cor da decoração.",
			"// decorationStyle: Define o estilo da linha da decoração (sólido, duplo, pontilhado, ponteado, ondulado).",
			"// letterSpacing: Controla o espaçamento entre os caracteres.",
			"// wordSpacing: Controla o espaçamento entre as palavras.",
			"// shadows: Lista de sombras para aplicar ao texto.",
			"// background: Define uma pintura para o fundo do texto.",
			"  "
		],
		"description": "dart-child-text"
	},
	"dart-child-container-size": {
		"prefix": "dart-child-container-size",
		"body": [
			" child: Container(",
			"   width: 100.0,",
			"   height: 100.0,",
			"   color: Colors.blue,",
			" ),",
			"  "
		],
		"description": "dart-child-container-size"
	},
	"dart-container-child-image-asset": {
		"prefix": "dart-container-child-image-asset",
		"body": [
			" Container(",
			"     padding: EdgeInsets.all(10),",
			"     margin: EdgeInsets.all(20),",
			"     decoration: BoxDecoration(",
			"       border: Border.all(color: Colors.blue, width: 2)",
			"     ),",
			"     child: Image.asset('assets/images/ods/allods.jpg'),",
			"   )  ",
			" ",
			" // flutter:",
			" //   assets:",
			" //     - assets/",
			"  "
		],
		"description": "dart-container-child-image-asset"
	},
	"dart-children-Widget-text-container": {
		"prefix": "dart-children-Widget-text-container",
		"body": [
			" children: <Widget>[",
			"   Text(",
			"     'Olá, Flutter!',",
			"     style: TextStyle(fontSize: 24),",
			"   ),",
			"   SizedBox(height: 20),",
			"     // ... outros componentes ",
			"   Container(",
			"     width: 100.0, // Largura do quadrado",
			"     height: 100.0, // Altura do quadrado",
			"     color: Colors.blue, // Cor do quadrado",
			"   ),",
			" ],",
			"  "
		],
		"description": "dart-children-Widget-text-container"
	},
	"dart-column-children-widget-image-asset": {
		"prefix": "dart-column-children-widget-image-asset",
		"body": [
			"Column(",
			"    children: <Widget>[",
			"      Text('Acima da imagem'),",
			"      Image.asset('assets/images/ods/allods.jpg'),",
			"      Text('Abaixo da imagem'),",
			"    ],",
			"  )  ",
			" ",
			" // flutter:",
			" //   assets:",
			" //     - assets/",
			"  "
		],
		"description": "dart-column-children-widget-image-asset"
	},
	"dart-row-children-Widget-image-asset": {
		"prefix": "dart-row-children-Widget-image-asset",
		"body": [
			" Row(",
			"   mainAxisAlignment: MainAxisAlignment.center,",
			"   children: <Widget>[",
			"     Text('À esquerda da imagem'),",
			"     Image.asset('assets/images/ods/allods.jpg', width: 100),",
			"     Text('À direita da imagem'),",
			"   ],",
			" )",
			" ",
			" // flutter:",
			" //   assets:",
			" //     - assets/",
			"  "
		],
		"description": "dart-row-children-Widget-image-asset"
	},
	"dart-ignore": {
		"prefix": "dart-ignore",
		"body": [
			"// ignore: dead_code",
			"  "
		],
		"description": "dart-ignore"
	},
	"dart-list": {
		"prefix": "dart-list",
		"body": [
			" List<Map<String, dynamic>> nome_lista = [",
			"   {'chave_string_1': 1, 'chave_string_2': 0.1, 'chave_string_3': false},",
			"   {'chave_string_1': 1, 'chave_string_2': 1.5, 'chave_string_3': true},",
			"   {'chave_string_1': 1, 'chave_string_2': 2.5 , 'chave_string_3': false},",
			" ];",
			"  "
		],
		"description": "dart-list"
	},
	"dart-map": {
		"prefix": "dart-map",
		"body": [
			" Map<String, String> colecao_lista = {",
			"   'chave001': 'Valor 1',",
			"   'chave002': 'Valor 2',",
			"   'chave003': 'Valor 3'",
			" };",
			"  "
		],
		"description": "dart-map"
	},
	"dart-set": {
		"prefix": "dart-set",
		"body": [
			" Set<String> nomes = {'valor_diferente_001', 'valor_diferente_002', 'valor_diferente_003''};",
			"  "
		],
		"description": "dart-set"
	},
	"for-in": {
		"prefix": "for-in",
		"body": [
			" for (var valor in valores_lista) {",
			"   print(",
			"       'Rótulo: ${valor['chave_lista']} | Rótulo: ${valor['chave_lista']} | Rótulo: ${valor['chave_lista']}'",
			"   );",
			" }",
			"  "
		],
		"description": "for-in"
	}
}